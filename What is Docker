https://www.zhihu.com/question/28300645

虚拟机（VM）和容器(contain)都属于虚拟化技术，在容器技术之前，业界的网红是虚拟机。虚拟机技术的代表，是VMWare和OpenStack。

5G时代为什么要引入容器？
这要从5G领域的另一个关键技术应用，（微）服务化解耦说起。5G借鉴IT产品的思路，将传统的大型复杂的单体式软件系统架构解构成多个独立的
服务化模块（微服务模块）。这些微服务模块数量庞大，粒度小，彼此之间弱耦合，通过服务治理框架进行管理和通信，可以独立开发、部署和运行。
基于微服务架构解耦后的产品可以灵活组合重构、快速上线、敏捷交付。
而基于虚拟机（VM）的虚拟化技术，由于粒度过大无法快速的创建和重构，无法满足微服务独立部署、独立升级的诉求。同时，由于资源使用率低，
无法满足敏捷交付的诉求。

虚拟机（VM）是操作系统级，一台主机可以安装多个操作系统，而容器是进程级，共用同一个操作系统，而且必须是Linux，因为它是基于Linux内核的进程，
它的技术实现是基于Linux的最大优点：开源共享，但因为多个容器共用同一个操作系统内核，有可能一个产生问题影响了其他。

容器（Docker）作为一种轻量级的虚拟化技术，它不需要像虚拟机一样虚拟出整个操作系统，而是在主机操作系统上虚拟出一个小规模隔离的虚拟环境，可分配CPU的占用配额

Docker 容器管理器，是构建和部署容器的工具，或者说是引擎。

Docker有两句口号：第一句是“Build, Ship and Run”。也就是，“搭建、发送、运行”。第二句口号就是“Build?once，Run?anywhere（搭建一次，到处能用）”

传统看来，虚拟化既可以通过硬件模拟来实现，也可以通过操作系统软件来实现。而容器技术充分利用了操作系统本身已有的机制和特性，
在共享Linux操作系统内核基础上进行进程级的虚拟化，以实现远超传统虚拟机技术的轻量级虚拟化。因此，有人把容器称为“新一代的虚拟化”技术。

操作系统内核与外围应用程序组装起来，并提供一些系统安装界面和系统配置与管理工具，就构成了一种发行版本的操作系统，
如SUSE、Ubuntu、RedHat等，就是发行版本的Linux操作系统。

Docker直接把应用和应用所需要的环境依赖（运行环境、配置文件、其他二进制文件等等），全部都打包成一个静态的镜像。这种情况下，我们把这个Docker镜像
复制到任何一个宿主机上都可以直接运行，而不需要再进行安装和配置。

Docker中还有另外一个概念叫Docker仓库，是Docker集中存放镜像文件的场所。因为在实际应用中，我们会有各种各样的镜像的诉求，这些镜像需要一个场所对镜像进行认证、管理和存储。

容器的部署依赖于相同的Linux内核，不依赖于具体的宿主机操作系统。因此，容器的宿主机操作系统既可以是我们物理服务器上的Linux（Host OS，例如E9000采用CentOS，开源的Linux发行版），
也可以是一些虚拟机的Linux（Guest OS，例如采用Euler），都是可以的，没有限制。当宿主机是物理服务器时，我们称之为裸机容器。当宿主机是虚拟机时，我们称之为虚拟机容器。
